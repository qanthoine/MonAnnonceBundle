<?php

namespace MonAnnonceBundle\Repository;

/**
 * AnnonceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnnonceRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAnnonce()
    {
        $time = new \DateTime();
        $time->modify('-10 day');
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.date > :time')
            ->setParameter('time', $time)
            ->orderBy('a.date', 'DESC')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function findCateVille($categorie_search, $ville)
    {
        $time = new \DateTime();
        $time->modify('-10 day');
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.date > :time')
            ->andwhere('a.categories = :categorie')
            ->andwhere('a.villes = :ville')
            ->setParameter('time', $time)
            ->setParameter('ville', $ville)
            ->setParameter('categorie', $categorie_search)
            ->orderBy('a.date', 'DESC')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function findVilles()
    {
        $qb = $this->createQueryBuilder('a');

         $qb->addGroupBy('a.categories')
            ->addGroupBy('a.villes')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function countannonce($recup_categorie)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->select('COUNT(a)')
            ->where('a.categories = :id_categorie')
            ->setParameter('id_categorie', $recup_categorie)
        ;
        return $qb
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }
    public function countannonceville($recup_ville)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->select('COUNT(a)')
            ->where('a.villes = :id_villes')
            ->setParameter('id_villes', $recup_ville)
        ;
        return $qb
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }
    public function countcategorieville($recup_ville, $recup_categorie)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->select('COUNT(a)')
            ->where('a.villes = :id_villes')
            ->andwhere('a.categories = :id_categories')
            ->setParameter('id_villes', $recup_ville)
            ->setParameter('id_categories', $recup_categorie)
        ;
        return $qb
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }
    public function annoncepage($recup_categorie, $nb_annonce_page, $first_page)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.categories = :id_categorie')
            ->setParameter('id_categorie', $recup_categorie)
            ->orderBy('a.id', 'ASC')
            ->setFirstResult($first_page)
            ->setMaxResults($nb_annonce_page)
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function annoncepageville($recup_ville, $nb_annonce_page, $first_page)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.villes = :id_ville')
            ->setParameter('id_ville', $recup_ville)
            ->orderBy('a.id', 'ASC')
            ->setFirstResult($first_page)
            ->setMaxResults($nb_annonce_page)
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function pagecategorieville($recup_ville, $recup_categorie, $nb_annonce_page, $first_page)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.villes = :id_ville')
            ->andwhere('a.categories = :id_categorie')
            ->setParameter('id_ville', $recup_ville)
            ->setParameter('id_categorie', $recup_categorie)
            ->orderBy('a.id', 'ASC')
            ->setFirstResult($first_page)
            ->setMaxResults($nb_annonce_page)
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
